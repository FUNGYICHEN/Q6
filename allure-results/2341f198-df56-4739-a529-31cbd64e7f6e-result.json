{"name": "test_specific_feature", "status": "broken", "statusDetails": {"message": "UnboundLocalError: cannot access local variable 'handle_response' where it is not associated with a value", "trace": "@pytest.mark.asyncio\n    async def test_specific_feature():\n        playwright, browser, context = await setup_browser()  # 使用默认设备iPhone 11\n        try:\n            page = await load_and_check_page(context)\n            print(\"Page loaded successfully.\")\n    \n>           await login(page, \"all24042501\", \"396012\")  # 使用公共登录函数\n\nbasic_module\\Basic operations_test.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbasic_module\\test_setup.py:20: in login\n    await page.click(\"button.login\")\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\async_api\\_generated.py:9444: in click\n    await self._impl_obj.click(\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_page.py:753: in click\n    return await self._main_frame.click(**locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001E35BD47DA0>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001E35C32FC40>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Page.click: Target page, context or browser has been closed\nE           Call log:\nE           waiting for locator(\"button.login\")\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:513: TargetClosedError\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.mark.asyncio\n    async def test_specific_feature():\n        playwright, browser, context = await setup_browser()  # 使用默认设备iPhone 11\n        try:\n            page = await load_and_check_page(context)\n            print(\"Page loaded successfully.\")\n    \n            await login(page, \"all24042501\", \"396012\")  # 使用公共登录函数\n    \n            with step(\"导航到个人中心\"):\n                await page.click(\"div.label:has-text('個人中心')\")\n                await asyncio.sleep(3)\n                await take_screenshot_and_attach(page, \"after_navigate_to_personal_center\")\n    \n            with step(\"进入我的钱包\"):\n                try:\n                    await page.click(\"div.buttons:has-text('我的錢包')\")\n                    await asyncio.sleep(1.5)\n                    await take_screenshot_and_attach(page, \"after_click_my_wallet\")\n                except Exception as e:\n                    print(f\"Failed to click on the my wallet button: {str(e)}\")\n                    await take_screenshot_and_attach(page, \"error_clicking_my_wallet\")\n    \n            # 准备捕获API响应\n            api_call_success = False\n    \n            async def handle_response(response):\n                print(\"Response received from URL:\", response.url)\n                if response.url == \"https://wap-q6.qbpink01.com/member/frontend/returnGameBalance\":\n                    json_data = await response.json()\n                    print(\"API Response Data:\", json_data)  # 打印看看实际的响应数据\n                    if json_data.get('code') == '0000':\n                        nonlocal api_call_success\n                        api_call_success = True\n                        print(\"API call was successful and the data is correct.\")\n    \n            # 注册响应处理器\n            page.on('response', handle_response)\n    \n            with step(\"点击一键转回按钮\"):\n                await page.click(\"div.money_back\")\n                await asyncio.sleep(4)  # 等待API响应完成\n                await take_screenshot_and_attach(page, \"after_click_money_back\")\n    \n        finally:\n            # 注销监听器\n>           page.remove_listener('response', handle_response)\nE           UnboundLocalError: cannot access local variable 'handle_response' where it is not associated with a value\n\nbasic_module\\Basic operations_test.py:53: UnboundLocalError"}, "attachments": [{"name": "stdout", "source": "2ccfc1de-b951-4144-8754-ff37156bf71f-attachment.txt", "type": "text/plain"}], "start": 1716866087005, "stop": 1716866089978, "uuid": "6de962d9-3743-4740-8fcb-175434241269", "historyId": "856af93e56f7d3d598559963c46cf3c9", "testCaseId": "856af93e56f7d3d598559963c46cf3c9", "fullName": "basic_module.Basic operations_test#test_specific_feature", "labels": [{"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "basic_module"}, {"name": "suite", "value": "Basic operations_test"}, {"name": "host", "value": "Luke"}, {"name": "thread", "value": "22136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "basic_module.Basic operations_test"}]}