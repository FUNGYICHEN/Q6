{"name": "test_specific_feature", "status": "broken", "statusDetails": {"message": "UnboundLocalError: cannot access local variable 'handle_response' where it is not associated with a value", "trace": "@pytest.mark.asyncio\n    async def test_specific_feature():\n        playwright, browser, context = await setup_browser()  # 使用默认设备iPhone 11\n        test_failed = False\n        fail_message = \"\"\n        try:\n            page = await load_and_check_page(context)\n            print(\"Page loaded successfully.\")\n    \n>           await login(page, \"all24042501\", \"396012\")  # 使用公共登录函数\n\nbasic_module\\test_party.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbasic_module\\test_setup.py:20: in login\n    await page.click(\"button.login\")\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\async_api\\_generated.py:9444: in click\n    await self._impl_obj.click(\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_page.py:753: in click\n    return await self._main_frame.click(**locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001E35C631C70>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001E35C6B1260>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Page.click: Target page, context or browser has been closed\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:513: TargetClosedError\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.mark.asyncio\n    async def test_specific_feature():\n        playwright, browser, context = await setup_browser()  # 使用默认设备iPhone 11\n        test_failed = False\n        fail_message = \"\"\n        try:\n            page = await load_and_check_page(context)\n            print(\"Page loaded successfully.\")\n    \n            await login(page, \"all24042501\", \"396012\")  # 使用公共登录函数\n    \n            with step(\"导航到个人中心\"):\n                await page.click(\"div.label:has-text('個人中心')\")\n                await asyncio.sleep(3)\n                await take_screenshot_and_attach(page, \"导航到个人中心后\")\n    \n            with step(\"点击优惠中心\"):\n                await page.click(\"div.promote .label:has-text('優惠中心')\")\n                await asyncio.sleep(2)\n                await take_screenshot_and_attach(page, \"点击优惠中心后\")\n    \n            with step(\"点击优惠活动\"):\n                await page.click(\"li.tab-item:has-text('活動優惠')\")\n                await asyncio.sleep(2)\n                await take_screenshot_and_attach(page, \"点击优惠活动后\")\n    \n            with step(\"点击立即申请\"):\n                viewport_size = page.viewport_size\n                x = viewport_size['width'] * 0.8\n                y = viewport_size['height'] * 0.35\n                await page.mouse.click(x, y)\n                await asyncio.sleep(2)\n                await take_screenshot_and_attach(page, \"点击立即申请后\")\n    \n            async def handle_response(response):\n                print(\"Response received from URL:\", response.url)\n                json_data = await response.json()\n                if (response.url.endswith(\"/extrabonus/applyAward\") and json_data.get('code') == '5602') or \\\n                   (response.url.endswith(\"/eGamePrize/receiveAward\") and json_data.get('code') == '9999'):\n                    nonlocal test_failed, fail_message\n                    test_failed = True\n                    fail_message = f\"Test failed for {\n                        response.url.split('/')[-1]}: {json_data.get('msg')}\"\n    \n            page.on('response', handle_response)\n    \n            with step(\"點擊確定\"):\n                await page.click(\"a.am-modal-button[role='button']:has-text('確定')\")\n                await asyncio.sleep(2)\n                await take_screenshot_and_attach(page, \"点击确定后\")\n    \n        finally:\n>           page.remove_listener('response', handle_response)\nE           UnboundLocalError: cannot access local variable 'handle_response' where it is not associated with a value\n\nbasic_module\\test_party.py:59: UnboundLocalError"}, "attachments": [{"name": "stdout", "source": "68247391-2e35-4c6e-9aa9-653fcdc29df9-attachment.txt", "type": "text/plain"}], "start": 1716866092504, "stop": 1716866093645, "uuid": "84ad5578-9c4c-4a52-8f7a-e9c951b3cb8b", "historyId": "59c1066ecf57f5d1645b19ccddde8de8", "testCaseId": "59c1066ecf57f5d1645b19ccddde8de8", "fullName": "basic_module.test_party#test_specific_feature", "labels": [{"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "basic_module"}, {"name": "suite", "value": "test_party"}, {"name": "host", "value": "Luke"}, {"name": "thread", "value": "22136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "basic_module.test_party"}]}