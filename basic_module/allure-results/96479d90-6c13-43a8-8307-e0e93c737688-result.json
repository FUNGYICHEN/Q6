{"name": "test_specific_feature", "status": "failed", "statusDetails": {"message": "Failed: Test failed for applyAward: 尚未到领取时间，请稍晚再试#reveicing award time out of range#尚未到領取時間，請稍晚再試#เปิดเผยเวลารางวัลนอกช่วง#recebendo tempo de prêmio fora do intervalo", "trace": "@pytest.mark.asyncio\n    async def test_specific_feature():\n        playwright, browser, context = await setup_browser()  # 使用默认设备iPhone 11\n        test_failed = False\n        fail_message = \"\"\n        try:\n            page = await load_and_check_page(context)\n            print(\"Page loaded successfully.\")\n    \n            await login(page, \"all24042501\", \"396012\")  # 使用公共登录函数\n    \n            with step(\"导航到个人中心\"):\n                await page.click(\"div.label:has-text('個人中心')\")\n                await asyncio.sleep(3)\n                await take_screenshot_and_attach(page, \"导航到个人中心后\")\n    \n            with step(\"点击优惠中心\"):\n                await page.click(\"div.promote .label:has-text('優惠中心')\")\n                await asyncio.sleep(2)\n                await take_screenshot_and_attach(page, \"点击优惠中心后\")\n    \n            with step(\"点击优惠活动\"):\n                await page.click(\"li.tab-item:has-text('活動優惠')\")\n                await asyncio.sleep(2)\n                await take_screenshot_and_attach(page, \"点击优惠活动后\")\n    \n            with step(\"点击立即申请\"):\n                viewport_size = page.viewport_size\n                x = viewport_size['width'] * 0.8\n                y = viewport_size['height'] * 0.35\n                await page.mouse.click(x, y)\n                await asyncio.sleep(2)\n                await take_screenshot_and_attach(page, \"点击立即申请后\")\n    \n            async def handle_response(response):\n                print(\"Response received from URL:\", response.url)\n                json_data = await response.json()\n                if (response.url.endswith(\"/extrabonus/applyAward\") and json_data.get('code') == '5602') or \\\n                   (response.url.endswith(\"/eGamePrize/receiveAward\") and json_data.get('code') == '9999'):\n                    nonlocal test_failed, fail_message\n                    test_failed = True\n                    fail_message = f\"Test failed for {\n                        response.url.split('/')[-1]}: {json_data.get('msg')}\"\n    \n            page.on('response', handle_response)\n    \n            with step(\"点击确定\"):\n                if not page.is_closed():\n                    await page.click(\"a.am-modal-button[role='button']:has-text('確定')\")\n                    await asyncio.sleep(2)\n                    await take_screenshot_and_attach(page, \"点击确定后\")\n                else:\n                    print(\"页面已关闭，无法点击确定。\")\n    \n        finally:\n            page.remove_listener('response', handle_response)\n            if browser:\n                await browser.close()\n            if playwright:\n                await playwright.stop()\n            if test_failed:\n>               pytest.fail(fail_message)\nE               Failed: Test failed for applyAward: 尚未到领取时间，请稍晚再试#reveicing award time out of range#尚未到領取時間，請稍晚再試#เปิดเผยเวลารางวัลนอกช่วง#recebendo tempo de prêmio fora do intervalo\n\nbasic_module\\test_party.py:68: Failed"}, "steps": [{"name": "导航到个人中心", "status": "passed", "attachments": [{"name": "导航到个人中心后", "source": "600a8e97-ee7e-49db-810e-9388a6e02ca4-attachment.png", "type": "image/png"}], "start": 1716456336739, "stop": 1716456341489}, {"name": "点击优惠中心", "status": "passed", "attachments": [{"name": "点击优惠中心后", "source": "81cf0bd5-5291-429d-be1a-d6bde116e314-attachment.png", "type": "image/png"}], "start": 1716456341489, "stop": 1716456343677}, {"name": "点击优惠活动", "status": "passed", "attachments": [{"name": "点击优惠活动后", "source": "c487cb30-c60e-4f78-b34c-5418eff0f0d4-attachment.png", "type": "image/png"}], "start": 1716456343677, "stop": 1716456345871}, {"name": "点击立即申请", "status": "passed", "attachments": [{"name": "点击立即申请后", "source": "6053358b-e091-4699-b666-1c9f936a31e9-attachment.png", "type": "image/png"}], "start": 1716456345871, "stop": 1716456348049}, {"name": "点击确定", "status": "passed", "attachments": [{"name": "点击确定后", "source": "81cfdd75-7d62-4ab9-8dd2-44d6000c42d9-attachment.png", "type": "image/png"}], "start": 1716456348054, "stop": 1716456350248}], "attachments": [{"name": "stdout", "source": "f90b0181-0eb7-4d88-8be9-6ff9a2ddfd69-attachment.txt", "type": "text/plain"}], "start": 1716456319028, "stop": 1716456350484, "uuid": "2eb8dcfd-8038-4b4e-acb6-405e4c2b5719", "historyId": "59c1066ecf57f5d1645b19ccddde8de8", "testCaseId": "59c1066ecf57f5d1645b19ccddde8de8", "fullName": "basic_module.test_party#test_specific_feature", "labels": [{"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "basic_module"}, {"name": "suite", "value": "test_party"}, {"name": "host", "value": "Luke"}, {"name": "thread", "value": "31484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "basic_module.test_party"}]}